@page "/AnimalsSubForum"
@using HttpClients.ClientInterfaces
@using Domain.Models
@inject IPostService PostService
@inject ICommentService CommentService
<h3 style="text-align: center">Animals</h3>




@if (!string.IsNullOrEmpty(msg))
{
    <div>
        <span>@msg</span>
    </div>
}

@if (posts == null)
{
    <span>Loading..</span>
}
else if (!posts.Any())
{
    <span>No users to be found</span>
}
else
{
    <div class="users-container ">
        @foreach (Post post in posts)
        {
            <div class="card p-5 my-5 border" style="width:600px">
                <h5>@post.Owner.Name</h5>
                <h4 class="card-title" style="text-align: center">@post.Title</h4>
                <img class="card-img-top" src="icons/animals.jpeg" alt="Card image">
                <div class="card-body p-5 my-2 border" style="text-align: center">
                    <h5 class="card-title">@post.Body</h5>
                </div>
                <div>
                    @foreach (Comment comment in comments[post.Id])
                    {
                        <h4 class="card-Comment">@comment.Body.ToString()</h4>
                    }
                </div>

            </div>
            
        }
        
    </div>
    
}
@code {
    private IEnumerable<Post>? posts;
    private IEnumerable<User> users;
    private Dictionary<int, IEnumerable<Comment>> comments = new Dictionary<int, IEnumerable<Comment>>();
    private string msg = "";
    
    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            posts = await PostService.GetAsync("Animals");
            foreach (Post post in posts)
            {
                IEnumerable<Comment> returnedComments = await CommentService.GetAllCommentsFromAPostAsync(post.Id);
                if (returnedComments == null)
                {
                    returnedComments = new List<Comment>();
                }
                comments.Add(post.Id,returnedComments);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

}