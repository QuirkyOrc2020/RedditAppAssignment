@inject IAuthService authService
@inject ISubForumService subForumService
@inject IPostService postService
@inject NavigationManager navMgr
@page "/CreatePost"
@using BlazorApp.Services
@using Domain.Models
@using HttpClients.ClientInterfaces
@using System.Security.Claims

<div class="card">
    <h3>Create Post</h3>
    <div class="form-group field">
        <label>Title:</label>
        <input type="text" @bind="title" @bind:event="oninput"/>
        <label>Body:</label>
        <input type="text" @bind="body" @bind:event="oninput"/>
        <div class="flex items-start flex flex-col">
            <label class="text-slate-800 text-left w-full">Select Sub Forum:</label>
            <select @bind="selectedSubForumId">
                @if (subForums != null)
                {
                    @foreach (SubForum subForum in subForums)
                    {
                        <option value="@subForum.Id">@subForum.Type</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="p-4 bg-slate-200 rounded-xl space-y-4 w-96">
          
            <button class="CreatePostBtn" @onclick="CreatePostAsync">Create Post</button>
            <label>@errorLabel</label>
          </div>
</div>



@code {
    private string title;
    private string body;
    private string errorLabel;

    private int selectedSubForumId;

    public IEnumerable<SubForum>? subForums;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            subForums = await subForumService.GetAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    private async Task CreatePostAsync()
    {
        
      try
        {
    
            ClaimsPrincipal context = await authService.GetAuthAsync();
            var claims = context.Identities.First().Claims.ToList();
            string? id = claims?.FirstOrDefault(x => x.Type.Equals("Id", StringComparison.OrdinalIgnoreCase))?.Value;
            await postService.CreateAsync(title, body, selectedSubForumId, int.Parse(id));
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
        
    }

}